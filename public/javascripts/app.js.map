{"version":3,"file":"public/javascripts/app.js","sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA,CACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvxQA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AAlCA;AAAA,C,CCAA;AAAA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA,C","sourcesContent":["var albumMarconi = {\n    name: 'The Telephone',\n    artist: 'Guglielmo Marconi',\n    label: 'EM',\n    year: '1909',\n    albumArtUrl: '/images/album-placeholder2.png',\n\n    songs: [{\n        name: 'Hello, Operator?',\n        length: '1:01'\n    }, {\n        name: 'Ring, ring, ring',\n        length: '5:01'\n    }, {\n        name: 'Fits in your pocket',\n        length: '3:21'\n    }, {\n        name: 'Can you hear me now?',\n        length: '3:14'\n    }, {\n        name: 'Wrong phone number',\n        length: '2:15'\n    }]\n};\n\nvar albumPicasso = {\n    name: 'The Colors',\n    artist: 'Pablo Picasso',\n    label: 'Cubism',\n    year: '1881',\n    albumArtUrl: '/images/album-placeholder.png',\n\n    songs: [{\n        name: 'Blue',\n        length: '4:26'\n    }, {\n        name: 'Green',\n        length: '3:14'\n    }, {\n        name: 'Red',\n        length: '5:01'\n    }, {\n        name: 'Pink',\n        length: '3:21'\n    }, {\n        name: 'Magenta',\n        length: '2:15'\n    }]\n};\n\nvar albumTest = {\n    name: 'The Testers',\n    artist: 'P Testo',\n    label: 'Testism',\n    year: '1011',\n    albumArtUrl: '/images/album-placeholder.png',\n\n    songs: [{\n        name: 'Bloo',\n        length: '2:26'\n    }, {\n        name: 'Gree',\n        length: '4:14'\n    }, {\n        name: 'Rad',\n        length: '99:01'\n    }, {\n        name: 'Pank',\n        length: '7:21'\n    }, {\n        name: 'Manta',\n        length: '3:15'\n    }]\n};\n\nvar albumArray = [albumMarconi, albumPicasso, albumTest];\n\nvar updateAlbumView = function(album) {\n    // Update the album title\n    var $albumTitle = $('.album-title');\n    $albumTitle.text(album.name);\n\n    // Update the album artist\n    var $albumArtist = $('.album-artist');\n    $albumArtist.text(album.artist);\n\n    // Update the meta information\n    var $albumMeta = $('.album-meta-info');\n    $albumMeta.text(album.year + \" on \" + album.label);\n\n    // Update the album image\n    var $albumImage = $('.album-image img');\n    $albumImage.attr('src', album.albumArtUrl);\n\n    // Update the Song List\n    var $songList = $(\".album-song-listing\");\n    $songList.empty();\n    var songs = album.songs;\n    for (var i = 0; i < songs.length; i++) {\n        var songData = songs[i];\n        var $newRow = createSongRow(i + 1, songData.name, songData.length);\n        $songList.append($newRow);\n    }\n};\n\nvar currentlyPlayingSong = null;\n\nvar createSongRow = function(songNumber, songName, songLength) {\n    var template =\n        '<tr>' + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>' + '  <td class=\"col-md-9\">' + songName + '</td>' + '  <td class=\"col-md-2\">' + songLength + '</td>' + '</tr>';\n\n    // Instead of returning the row immediately, we'll attach hover\n    // functionality to it first.\n    var $row = $(template);\n\n    var onHover = function(event) {\n        songNumberCell = $(this).find('.song-number');\n        songNumber = songNumberCell.data('song-number');\n        if (songNumber !== currentlyPlayingSong) {\n            songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n        }\n    };\n\n    var offHover = function(event) {\n        songNumberCell = $(this).find('.song-number');\n        songNumber = songNumberCell.data('song-number');\n        if (songNumber !== currentlyPlayingSong) {\n            songNumberCell.html(songNumber);\n        }\n    };\n\n    var clickHandler = function(event) {\n        songNumber = $(this).data('song-number');\n        if (currentlyPlayingSong !== null) { //if any song is playing\n            currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n            currentlyPlayingCell.html(currentlyPlayingSong);\n        }\n        if (currentlyPlayingSong !== songNumber) { //if clicked  and is current song  not playing\n            // a Paly iconw ill be showing on hover\n            // switch from play to pause to show it is playing\n            $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n            currentlyPlayingSong = songNumber;\n        } else if (currentlyPlayingSong === songNumber) { //if clicked and current song is playing\n            // Switch from pause to play for current song to indicate pausing\n            $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n            currentlyPlayingSong = null;\n        }\n    };\n\n    $row.find('.song-number').click(clickHandler);\n    $row.hover(onHover, offHover);\n\n    return $row;\n};\n\nvar chooseRandomAlbum = function() {\n    var temp = albumCounter;\n    do {\n        if (albumCounter === temp) {\n            albumCounter = Math.round(Math.random() * (albumArray.length - 1));\n            console.log(\"Counter is \" + albumCounter);\n            console.log(\"Temp is \" + temp);\n            console.log(albumArray[albumCounter]);\n        }\n    } while (albumCounter === temp)\n    currentAlbum = albumArray[albumCounter];\n    console.log(\"Album changed to: \" + currentAlbum.name);\n    updateAlbumView(currentAlbum);\n};\n\nvar updateSeekPercentage = function($seekBar, event) {\n    var barWidth = $seekBar.width();\n    var offsetX = event.pageX - $seekBar.offset().left; // get mouse x offset here\n\n    var offsetXPercent = (offsetX / $seekBar.width()) * 100;\n    offsetXPercent = Math.max(0, offsetXPercent);\n    offsetXPercent = Math.min(100, offsetXPercent);\n\n    var percentageString = offsetXPercent + '%';\n    $seekBar.find('.fill').width(percentageString);\n    $seekBar.find('.thumb').css({\n        left: percentageString\n    });\n};\n\nvar setupSeekBars = function() {\n\n    $seekBars = $('.player-bar .seek-bar');\n    $seekBars.click(function(event) {\n        updateSeekPercentage($(this), event);\n    });\n\n    $seekBars.find('.thumb').mousedown(function(event) {\n        var $seekBar = $(this).parent();\n\n        $seekBar.addClass('no-animate');\n\n        $(document).bind('mousemove.thumb', function(event) {\n            updateSeekPercentage($seekBar, event);\n        });\n\n\n        // clean up\n        $(document).bind('mouseup.thumb', function() {\n            $seekBar.addClass('no-animate');\n\n            $(document).unbind('mousemove.thumb');\n            $(document).unbind('mouseup.thumb');\n        });\n    });\n};\n\n\n\n\n\n// This 'if' condition is used to prevent the jQuery modifications\n// from happening on non-Album view pages.\n//  - Use a regex to validate that the url has \"/album\" in its path.\nif (document.URL.match(/\\/album.html/)) {\n    // Wait until the HTML is fully processed.\n    var albumCounter = Math.round(Math.random() * (albumArray.length - 1));\n    var currentAlbum = albumArray[albumCounter];\n\n    $(document).ready(function() {\n        $(\".album-title\").click(function() {\n            chooseRandomAlbum();\n        });\n        updateAlbumView(currentAlbum);\n        setupSeekBars();\n    });\n}"," //require('./landing');\n //require('./album');\n //require('./collection');\n //require('./profile');\n\n // Example album.\n var albumPicasso = {\n     name: 'The Colors',\n     artist: 'Pablo Picasso',\n     label: 'Cubism',\n     year: '1881',\n     albumArtUrl: '/images/album-placeholder.png',\n\n     songs: [{\n         name: 'Blue',\n         length: '4:26'\n     }, {\n         name: 'Green',\n         length: '3:14'\n     }, {\n         name: 'Red',\n         length: '5:01'\n     }, {\n         name: 'Pink',\n         length: '3:21'\n     }, {\n         name: 'Magenta',\n         length: '2:15'\n     }]\n };\n\n\n\n\n blocJams = angular.module('BlocJams', ['ui.router']);\n\n /******************************************************\n                        STATES\n******************************************************/\n\n blocJams.config(['$stateProvider', '$locationProvider',\n     function($stateProvider, $locationProvider) {\n         $locationProvider.html5Mode(true);\n\n         /******************************************************\n Landing Page \n******************************************************/\n\n         $stateProvider.state('landing', {\n             url: '/',\n             controller: 'Landing.controller',\n             templateUrl: '/templates/landing.html'\n         });\n\n         /******************************************************\n Song Page \n******************************************************/\n\n         $stateProvider.state('song', {\n             url: '/song',\n             controller: 'Song.controller',\n             templateUrl: '/templates/song.html'\n         });\n\n\n\n         /******************************************************\n Collection Page \n******************************************************/\n\n         $stateProvider.state('collection', {\n             url: '/collection',\n             controller: 'Collection.controller',\n             templateUrl: '/templates/collection.html'\n         });\n\n         /******************************************************\n Album Page \n******************************************************/\n\n         $stateProvider.state('album', {\n             url: '/album',\n             controller: 'Album.controller',\n             templateUrl: '/templates/album.html'\n         });\n\n         /******************************************************\n Album Page \n******************************************************/\n\n         $stateProvider.state('playerBar', {\n             controller: 'playerBar.controller',\n             templateUrl: '/templates/player_bar.html'\n         });\n\n         /******************************************************\n                        STATES\n******************************************************/\n\n     }\n ]);\n\n /******************************************************\n                     CONTROLLERS\n******************************************************/\n\n /******************************************************\n Landing Page \n******************************************************/\n\n blocJams.controller('Landing.controller', ['$scope',\n     function($scope) {\n\n         $scope.titleText = \"Bloc Jams, ver. Rob - Click here to shuffle album\";\n\n         $scope.subText = \"Turn the muuuusic up!\";\n\n         $scope.albumURLs = [\n             '/images/album-placeholders/album-1.jpg',\n             '/images/album-placeholders/album-2.jpg',\n             '/images/album-placeholders/album-3.jpg',\n             '/images/album-placeholders/album-4.jpg',\n             '/images/album-placeholders/album-5.jpg',\n             '/images/album-placeholders/album-6.jpg',\n             '/images/album-placeholders/album-7.jpg',\n             '/images/album-placeholders/album-8.jpg',\n             '/images/album-placeholders/album-9.jpg',\n         ];\n\n         $scope.albumShuffle = function() {\n             function shuffle(o) { //v1.0\n                 for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n                 return o;\n             };\n\n             shuffle($scope.albumURLs);\n         };\n\n         $scope.subTextClicked = function() {\n             $scope.subText += '!';\n         };\n     }\n ]);\n\n /******************************************************\n Song Page \n******************************************************/\n\n blocJams.controller('Song.controller', ['$scope',\n     function($scope) {\n\n         $scope.subText = \"Song Template\";\n\n         $scope.changeToNo = function() {\n             $scope.subText = \"It CHANGED!! OH MY GOSH!\";\n         };\n\n     }\n ]);\n\n /******************************************************\n Collection Page\n******************************************************/\n\n blocJams.controller('Collection.controller', ['$scope',\n     function($scope) {\n         $scope.hideOverlay = true;\n         $scope.albums = [];\n         for (var i = 0; i < 33; i++) {\n             $scope.albums.push(angular.copy(albumPicasso));\n         }\n     }\n ]);\n\n /******************************************************\n Album Page\n******************************************************/\n\n blocJams.controller('Album.controller', ['$scope', 'SongPlayer',\n     function($scope, SongPlayer) {\n         $scope.album = angular.copy(albumPicasso);\n         var hoveredSong = null;\n\n\n         $scope.onHoverSong = function(song) {\n             hoveredSong = song;\n         };\n\n         $scope.offHoverSong = function(song) {\n             hoveredSong = null;\n         };\n\n         $scope.getSongState = function(song) {\n             if (song === SongPlayer.currentSong && SongPlayer.playing) {\n                 return 'playing';\n             } else if (song === hoveredSong) {\n                 return 'hovered';\n             }\n             return 'default';\n         };\n\n\n         $scope.playSong = function(song) {\n             SongPlayer.setSong($scope.album, song);\n             SongPlayer.play();\n         };\n\n         $scope.pauseSong = function(song) {\n             SongPlayer.pause();\n         };\n\n     }\n ]);\n\n /******************************************************\n Song Player \n******************************************************/\n\n blocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer',\n     function($scope, SongPlayer) {\n         $scope.songPlayer = SongPlayer;\n     }\n ]);\n\n blocJams.service('SongPlayer', function() {\n\n     var trackIndex = function(album, song) {\n         return album.songs.indexOf(song);\n     };\n\n\n     return {\n         currentSong: null,\n         currentAlbum: null,\n         playing: false,\n\n         play: function() {\n             this.playing = true;\n         },\n         pause: function() {\n             this.playing = false;\n         },\n         setSong: function(album, song) {\n             this.currentAlbum = album;\n             this.currentSong = song;\n         },\n         next: function() {\n             var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n             currentTrackIndex++;\n             if (currentTrackIndex >= this.currentAlbum.songs.length) {\n                 currentTrackIndex = 0;\n             }\n             this.currentSong = this.currentAlbum.songs[currentTrackIndex];\n         },\n         previous: function() {\n             var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n             currentTrackIndex--;\n             if (currentTrackIndex < 0) {\n                 currentTrackIndex = this.currentAlbum.songs.length - 1;\n             }\n\n             this.currentSong = this.currentAlbum.songs[currentTrackIndex];\n         }\n     };\n });","var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">' + '  <div class=\"collection-album-image-container\">' + '    <img src=\"/images/album-placeholder.png\"/>' + '  </div>' + '  <div class=\"caption album-collection-info\">' + '    <p>' + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>' + '      <br/>' + '      <a href=\"/album.html\"> Artist name </a>' + '      <br/>' + '      X songs' + '      <br/>' + '\t\tX:XX Total Length' + '      <br/>' + '    </p>' + '  </div>' + '</div>';\n    return $(template);\n};\n\nvar buildAlbumOverlay = function(albumURL) {\n    var template =\n        '<div class=\"collection-album-image-overlay\">' + '  <div class=\"collection-overlay-content\">' + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">' + '      <i class=\"fa fa-play\"></i>' + '    </a>' + '    &nbsp;' + '    <a class=\"collection-overlay-button\">' + '      <i class=\"fa fa-plus\"></i>' + '    </a>' + '  </div>' + '</div>';\n    return $(template);\n};\n\nvar updateCollectionView = function() {\n    var $collection = $(\".collection-container .row\");\n    $collection.empty();\n    for (var i = 0; i < 20; i++) {\n        var $newThumbnail = buildAlbumThumbnail();\n        $collection.append($newThumbnail);\n    }\n\n    var onHover = function(event) {\n        $(this).append(buildAlbumOverlay(\"/album.html\"));\n    };\n    var offHover = function(event) {\n        $(this).find('.collection-album-image-overlay').remove();\n    };\n\n    $collection.find('.collection-album-image-container').hover(onHover, offHover);\n};\n\nif (document.URL.match(/\\/collection.html/)) { // This waits until the HTML is fully processed.\n    $(document).ready(function() {\n        updateCollectionView();\n    });\n}","$(document).ready(function() { \n\n\t$('.hero-content h3').click(function() {\n\t\tsubText = $(this).text();\n      \t$(this).text(subText + \"!\");\n\t});\n\n\tvar onHoverAction = function(event) {\n\t\tconsole.log(\"Hover action TRIGGERED!!\");\n\t\t$(this).animate({'margin-top': '10px'});\n\t};\n\n\tvar offHoverAction = function(event) {\n\t\tconsole.log(\"Off-Hover action TRIGGERED!!\");\n\t\t$(this).animate({'margin-top': '0px'});\n\t};\n\n\tvar onHoverColourChange = function(event) {\n\t\tconsole.log(\"Let's colour this text!\");\n\t\t$(this).css({'color': 'red'});\n\t};\n\n\tvar offHoverColourChange = function(event) {\n\t\tconsole.log(\"Let's un-colour this text!\");\n\t\t$(this).css({'color': 'white'});\n\t};\n\n\t$('.selling-points .point').hover(onHoverAction, offHoverAction);\n\t$('.logo').click(function() {\n\t\tconsole.log(\"GOODBYE SUCKERS! Hehehehe\")\n\t\t$(this).fadeOut()});\n\t$('.hero-content h3').hover(onHoverColourChange, offHoverColourChange);\n});"," // holds the name of our tab button container for selection later in the function\n var tabsContainer = \".user-profile-tabs-container\"\n var selectTabHandler = function(event) {\n     $tab = $(this);\n     $(tabsContainer + \" li\").removeClass('active');\n     $tab.parent().addClass('active');\n     selectedTabName = $tab.attr('href');\n     console.log(selectedTabName);\n     $(\".tab-pane\").addClass('hidden');\n     $(selectedTabName).removeClass('hidden');\n     event.preventDefault();\n };\n\n if (document.URL.match(/\\/profile.html/)) {\n     $(document).ready(function() {\n         var $tabs = $(tabsContainer + \" a\");\n         $tabs.click(selectTabHandler);\n         $tabs[0].click();\n     });\n }"]}